(procedure f1 (+ 1 2)); out="" 
(procedure f1 (+ 1 2)) (procedure f1 (+ 1 1)); out="Line 1: Procedure naming collision 'f1'" 
(procedure f1 (+ 1 2)) (procedure f2 (+ 1 1)); out="" 
(f1); out="Line 1: Undefined function 'f1'"
(procedure f1 (+ 1 (+ 1 1))) (f1); out="3" 
(procedure f1 (+ 1 1)) (procedure f2 (+ (f1) (f1))) (f2); out="4" 
(procedure f1 (+ 1 1)) (procedure f2 (+ f1 f1)) (f2); out="Line 1: Undefined variable 'f1'"
(procedure f1 (set a 1) (set b 2) (+ a (+ 1 b))) (f1); out="4" 
(procedure f1 a1 b1 (+ a1 b1)) (f1); out="0"
(procedure f1 (+ a1 b1)) (f1); out="Line 1: Undefined variable 'a1'"
(procedure f1 a1 b1 (+ a2 b2)) (f1); out="Line 1: Undefined variable 'a2'"
(procedure f1 a b (+ a b)) (f1); out="0"
(procedure f1 a b (+ a b)) (f1 2); out="2"
(procedure f1 a b (+ a b)) (f1 1 2); out="3"
(procedure f1 a b (+ a b)) (f1 1 2) (f1); out="3"
(procedure f1 a b (+ a b)) (f1 1 2) (f1 2); out="4"
(procedure f1 a b (+ a b)) (f1 1 2) (f1 (f1)); out="Line 1: Infinite recursion 'f1'"
(procedure f1 a b (+ a b)) (procedure f2 (+ 1 1)) (f1 1 3) (f1 (f2)); out="5"
(procedure f1 a b (+ a b)) (f1 1 2) (f1 1 2 3 4); out="3"
(procedure f1 a b (+ a b)) (f1 1 2) (f1 1 2 3 (f1)); out="3"
